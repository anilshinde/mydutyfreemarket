<?php

namespace ShopBundle\Repository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * Find categories and current page's one
     * 
     * @param string $pageQName
     *
     * return array $categories $currentCategory
     */
    public function findCategoriesWithPage($categoryQName = null, $pageQName = null)
    {

        // First query to get all categories
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT c '.
                'FROM ShopBundle:Category c '.
                'WHERE c.status=1 '.
                'ORDER BY c.rank ASC'
            );
        $categories = $query->getResult();

        // Get only first level categories, sub-ones can be get using subcategories property
        $allParentCategories = array();
        foreach($categories as $category)
        {
            if(empty($category->getParent()))
            {
                $allParentCategories[] = $category;
            }
        }
        $currentCategory = null;

        // Find current category using page qName parameter
        if($pageQName !== null)
        {
            // Query page to get its category
            $query = $this->getEntityManager()
                ->createQuery(
                    'SELECT p '.
                    'FROM ShopBundle:Page p '.
                    'WHERE p.qName = :qName '
                )
                ->setParameter('qName', $pageQName);
            $page = $query->getOneOrNullResult();

            foreach($categories as $category)
            {
                if($category->getId() === $page->getCategory->getId())
                {
                    $currentCategory = $category;
                    break;
                }
            }
        }

        // Find current category using category qName parameter
        if($categoryQName !== null)
        {
            foreach($categories as $category)
            {
                if($category->getQName() === $categoryQName)
                {
                    $currentCategory = $category;
                    break;
                }
            }
        }

        // If no category or page specified in the route then we redirect to the first page (i.e: home)
        if(empty($category) and count($categories) > 0)
        {
            $currentCategory = $categories[0];
        }

        return array($allParentCategories, $currentCategory);
    }
}
